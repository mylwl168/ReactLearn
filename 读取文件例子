import React, { useState } from 'react';

const ReadFileWithSpinnerExample = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [fileContent, setFileContent] = useState('');

  const readFile = async () => {
    try {
      setIsLoading(true); // 开始加载
      const file = await openFile();
      const content = await readFileContent(file);

      setFileContent(content);
      setIsLoading(false); // 加载完成
    } catch (error) {
      console.error('文件读取失败:', error);
      setIsLoading(false); // 加载失败
    }
  };

  const openFile = () => {
    return new Promise((resolve, reject) => {
      const input = document.createElement('input');
      input.type = 'file';

      input.onchange = () => {
        if (input.files && input.files.length > 0) {
          resolve(input.files[0]);
        } else {
          reject(new Error('未选择文件'));
        }
      };

      input.click();
    });
  };

  const readFileContent = (file) => {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();

      reader.onload = (event) => {
        resolve(event.target.result);
      };

      reader.onerror = reject;

      reader.readAsText(file);
    });
  };

  return (
    <div>
      <button onClick={readFile}>读取文件</button>
      {isLoading && <div>Loading...</div>}
      {fileContent && <div>文件内容: {fileContent}</div>}
    </div>
  );
};

export default ReadFileWithSpinnerExample;
