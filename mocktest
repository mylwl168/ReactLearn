import { render } from 'vitest';
import { createContext, useContext } from 'react';

const xxxContext = createContext(null);

const usexxxContext = () => {
  return useContext(xxxContext);
};

const MyComponent = () => {
  const value = usexxxContext();
  return <div>{value}</div>;
};

// Mock useContext
const mockUseContext = jest.fn();
jest.mock('react', () => ({
  ...jest.requireActual('react'),
  useContext: () => mockUseContext(),
}));

test('should render correctly with mocked usexxxContext', () => {
  const customValue = 'Custom Value';

  mockUseContext.mockReturnValue(customValue);

  const { getByText } = render(<MyComponent />);

  expect(getByText(customValue)).toBeTruthy();

  mockUseContext.mockReset(); // 重置模拟的函数
});
